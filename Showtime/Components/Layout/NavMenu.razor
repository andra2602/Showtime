@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager

<nav class="top-nav @(IsUserAuthenticated() ? "connected" : "")">
    <div class="nav-left">
        <a class="nav-brand" href="">Showtime</a>
    </div>

    <div class="nav-center">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="bi bi-house-door-fill-nav-menu"></span> Home
        </NavLink>

        <AuthorizeView>
            <Authorized>
                <NavLink class="nav-link" href="bands">
                    <Blazorise.Icon Name="FontAwesomeIcons.Music" /> Bands
                </NavLink>
                <NavLink class="nav-link" href="festivals">
                    <Blazorise.Icon Name="FontAwesomeIcons.Fire" /> Festivals
                </NavLink>
                <NavLink class="nav-link" href="bookings">
                    <Blazorise.Icon Name="FontAwesomeIcons.Ticket" /> Bookings
                </NavLink>
            </Authorized>
        </AuthorizeView>
    </div>

    <div class="nav-right">
        <AuthorizeView>
            <Authorized>
                <NavLink class="nav-link" href="Account/Manage">
                    <Blazorise.Icon Name="FontAwesomeIcons.User" /> @context.User.Identity?.Name
                </NavLink>
                <form action="Account/Logout" method="post" class="logout-form">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="" />
                    <button type="submit" class="nav-link btn-link">
                        <span class="bi bi-arrow-bar-left-nav-menu"></span> Logout
                    </button>
                </form>
            </Authorized>
            <NotAuthorized>
                <NavLink class="nav-link" href="Account/Register">
                    <Blazorise.Icon Name="FontAwesomeIcons.UserPlus" /> Register
                </NavLink>
                <NavLink class="nav-link" href="Account/Login">
                    <span class="bi bi-person-badge-nav-menu"></span> Login
                </NavLink>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</nav>



@code {
    private string? currentUrl;
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    private bool IsUserAuthenticated()
    {
        if (AuthenticationStateTask == null) return false;

        var authState = AuthenticationStateTask.Result;
        return authState.User.Identity?.IsAuthenticated ?? false;
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}